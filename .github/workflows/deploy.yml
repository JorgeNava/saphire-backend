name: Deploy Lambdas

on:
  push:
    branches: [main]

jobs:
  deploy-all:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        lambda:
          - saveTextMessage
          - saveAudioMessage
          - generateUploadUrl
          - getMessages
          - getMessage
          - updateMessage
          - deleteMessage
          - createList
          - getLists
          - addItemToList
          - deleteList
    steps:
      - uses: actions/checkout@v3

      - uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Prepare and Zip Lambda
        run: |
          rm -rf build/${{ matrix.lambda }}
          mkdir -p build/${{ matrix.lambda }}
          cp -r lambdas/${{ matrix.lambda }}/* build/${{ matrix.lambda }}/

          cd build/${{ matrix.lambda }}
          npm install --omit=dev
          zip -r ../../saphire-${{ matrix.lambda }}.zip .
          cd -

      - name: Deploy Lambda (Create or Update)
        run: |
          set -e
          LAMBDA_NAME="saphire-${{ matrix.lambda }}"

          EXISTS=$(aws lambda get-function --function-name $LAMBDA_NAME 2>/dev/null || true)

          if [ -z "$EXISTS" ]; then
            echo "Lambda does not exist. Creating..."
            aws lambda create-function \
              --function-name $LAMBDA_NAME \
              --runtime nodejs18.x \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/${{ secrets.LAMBDA_EXECUTION_ROLE }} \
              --handler index.handler \
              --zip-file fileb://saphire-${{ matrix.lambda }}.zip \
              --region us-east-1 \
              --environment Variables="{DELETE_AUDIO_AFTER_TRANSCRIBE=${{ secrets.DELETE_AUDIO_AFTER_TRANSCRIBE }},DYNAMO_TABLE=${{ secrets.DYNAMO_TABLE }},AUDIO_BUCKET=${{ secrets.AUDIO_BUCKET }},LISTS_TABLE=${{ secrets.LISTS_TABLE }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}}"
          else
            echo "Lambda exists. Updating code..."
            aws lambda update-function-code \
              --function-name $LAMBDA_NAME \
              --zip-file fileb://saphire-${{ matrix.lambda }}.zip

            echo "Waiting for AWS to apply code update..."
            sleep 10

            echo "Updating handler and env vars..."
            aws lambda update-function-configuration \
              --function-name $LAMBDA_NAME \
              --handler index.handler \
              --environment Variables="{DELETE_AUDIO_AFTER_TRANSCRIBE=${{ secrets.DELETE_AUDIO_AFTER_TRANSCRIBE }},DYNAMO_TABLE=${{ secrets.DYNAMO_TABLE }},AUDIO_BUCKET=${{ secrets.AUDIO_BUCKET }},LISTS_TABLE=${{ secrets.LISTS_TABLE }},OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}}"
          fi

      - name: Clean ZIP and build
        run: |
          rm -rf saphire-${{ matrix.lambda }}.zip
          rm -rf build/${{ matrix.lambda }}
